[{"content":"","date":"24 October 2023","permalink":"/gigigatgat/tags/asp.net/","section":"Tags","summary":"","title":"ASP.NET"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"I hope you like avocados as I do.\n","date":"24 October 2023","permalink":"/gigigatgat/authors/avocado/","section":"Authors","summary":"I hope you like avocados as I do.","title":"Avocado (Tiffany)"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/tags/code/","section":"Tags","summary":"","title":"code"},{"content":" Entity Framework Core is a powerful tool for simplifying database integration with web applications. In this article, we\u0026rsquo;ll gain a basic understanding of Entity Framework Core and demonstrate how it streamlines the process of connecting databases to your web pages. You\u0026rsquo;ll also find step-by-step instructions to help you get started, regardless of whether you\u0026rsquo;re a Windows or Mac user. Since I\u0026rsquo;m a Mac user, most of the screenshots in this tutorial will be from a Mac system.\nWhat is Entity Framework Core? # Entity Framework Core (EF Core) is an open-source and lightweight framework developed by Microsoft. It is widely used in .NET applications to help developers interact with relational databases and convert data into entity classes in a more object-oriented manner. This tool also enables automatic generation of Razor pages with accessible data and default layout settings. You can install EF Core on NuGet public domain to your web application projects in Visual Studio.\nPrerequisites # Installed Visual Studio and MySql Workbench Connect to local instance in MySql and ensure the server status is Running A populated database to be converted to classes and displayed on web pages In my case, I created a new scheme named StudentRecord and ran the sql file StudentRecordDBBuilder.MySQL.sql to populate it Basic knowledge about ASP.NET and Razor Page Procedures # 1. Create a new ASP.NET Razor Page web application project in Visual Studio # Choose the Web Application template for creating an ASP.NET Core application with example ASP.NET Razor Page content Select .NET 7.0 as the targeted frame Uncheck Configure for HTTPS Name the project and solution as you prefer, and place the folder in a location that best suits you 2. Install Microsoft Entity Framework Core # Right click on the project folder and select Manage NuGet Packages Select Browse tab, and select nuget.org as the package source. Search and install the following three packages to the project. You may need to click Accept if a License Acceptance window pops up. MySql.EntityFrameworkCore Microsoft.EntityFrameworkCore.Tools Microsoft.VisualStudio.Web.CodeGeneration.Design Double check whether these three packages are installed successfully by expanding the project‚Äôs Dependencies and Packages or browsing the Installed tab in the NuGet Packages Manager\u0026rsquo;s window 3. Generate the entity classes from the database # Create a folder DataAccess in the project to contain the generated classes for MacOS # Select Show Terminal Window from Tools in the menu if the terminal window is hiding Run the following commands in the VS terminal window: to create a new Tool Manifest: dotnet new tool-manifest to install dotnet-ef: dotnet tool install dotnet-ef to make the dotnet-ef command available: dotnet tool restore to generate classes for each tables in the database and the DataContext class: dotnet dotnet-ef dbcontext Scaffold \u0026quot;Server=localhost; User ID=root; Password=yourPassword; Database=yourDatabaseName\u0026quot; MySql.EntityFrameworkCore -o DataAccess for Windows # Select NuGet Package Manager from Tools in the menu and start NuGet Package Manager Console Run the following command with your own credentials: Scaffold-DbContext ‚ÄúServer=localhost; User ID=root; Password=yourPassword; Database=yourDatabaseName‚Äù MySql.EntityFrameworkCore -o DataAccess Remember to use your own credentials in the Scaffold command instead of copying and pasting! By finishing the above steps, the Entity Framework scaffold tool will generate a set of class files in the DataAccess folder 4. Modify the DB connection string for security concerns # Add a ConnectionStrings section with one connection string using the same name of your database in the application‚Äôs configuration file appsetting.json Remove the hardcoded connection string in the DB Context Class file, e.g. StudentRecordContext.cs 5. Register the DB Access Service with the Application # In the Program.cs file, add the following statements to the beginning: using Microsoft.EntityFrameworkCore; using \u0026lt;ProjectName\u0026gt;.DataAccess; In the same file, add the following codes after builder.Services.AddRazorPages( ): string dbConnStr = builder.Configuration.GetConnectionString(\u0026#34;StudentRecord\u0026#34;); if (dbConnStr != null) { builder.Services.AddDbContext\u0026lt;StudentRecordContext\u0026gt;( options =\u0026gt; options.UseMySQL(dbConnStr)); } Select Rebuild Solution from Build in the menu and ensure that the solution build successfully 6. Generate Razor pages using Entity Framework (CRUD) # Add a new folder inside the Pages folder, right click on the folder and select Add \u0026gt; New Scaffolding Select Razor Pages using Entity Framework (CRUD) and choose the corresponding model class and data context class you\u0026rsquo;d like to apply By finishing the above steps, the CRUD Razor pages are already generated inside the folder 7. Review and modify the pages according to your needs # In the _Layout.cshtml page, add menu items in the navbar to access the newly generated pages from the index page Run the application and view the pages in browser Common Errors # Debugging is a common practice in application development. One of my biggest challenges in this project is running the Scaffold command. I\u0026rsquo;ve listed a few errors that I encountered and their respective solutions below.\n1. Unable to find provider assembly \u0026lsquo;MySql.EntityFrameworkCore\u0026rsquo; # I re-installed \u0026lsquo;MySql.EntityFrameworkCore\u0026rsquo; with a different version(7.0.5) and forgot to update it. Rebuild the solution will solve this issue.\n2. Missing required argument \u0026lsquo;\u0026lt;Provider\u0026gt;\u0026rsquo; # Double-check the quotation marks in the command. In my case, I mistakenly used Chinese quotation marks.\n3. Authentication to host \u0026rsquo;localhost\u0026rsquo; for user \u0026lsquo;root\u0026rsquo; using method \u0026lsquo;caching_sha2_password\u0026rsquo; failed with message: access denied for user \u0026lsquo;root\u0026rsquo;@\u0026rsquo;localhost\u0026rsquo; (using password: yes) # If you are absolutely certain that you are using the correct password, it\u0026rsquo;s likely that a special character in the password is causing confusion in the terminal/console. You can change the password to a simpler one or create a new temporary user with all privileges and try again.\nCredit # This blog is inspired from a lab assignment of the course CST8256 Web Programming Language I, with an original instruction written by Wei Gong.\n","date":"24 October 2023","permalink":"/gigigatgat/posts/entity-framework-core/","section":"Posts","summary":"Entity Framework Core is a powerful tool for simplifying database integration with web applications.","title":"Getting Started with Entity Framework Core in Visual Studio"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" More Than Web Development This section contains tutorials, notes, and everything related to the field of technology.\n","date":"24 October 2023","permalink":"/gigigatgat/categories/tech/","section":"Categories","summary":"More Than Web Development This section contains tutorials, notes, and everything related to the field of technology.","title":"Tech"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/tags/tutorial/","section":"Tags","summary":"","title":"tutorial"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/tags/visualstudio/","section":"Tags","summary":"","title":"VisualStudio"},{"content":"This is the home of Avocado \u0026amp; Sloth, where we \u0026quot;gigigatgat\u0026quot;(a Cantonese slang meaning to chatter away) about everything in our life. Sometimes we also invite friends over to enjoy the space and write some inspirable blogs.\nü•ë¬†Avocado (Tiffany): female(she/her), favorite color is green just like an avocado, head chef in our home\nü¶•¬†Sloth (Raymond): male(he/him), passionate about football and video games, honorable master kitchen assistant\n","date":"24 October 2023","permalink":"/gigigatgat/","section":"Welcome to GiGiGatGat! üí¨","summary":"This is the home of Avocado \u0026amp; Sloth, where we \u0026quot;gigigatgat\u0026quot;(a Cantonese slang meaning to chatter away) about everything in our life.","title":"Welcome to GiGiGatGat! üí¨"},{"content":"Hi there! We are Avocado and Sloth, a couple studying Web Development and living in Ottawa, Canada.\nAvocado is usually sold in supermarkets at a price of $5 for two. Oops. Wait a minute. Something goes wrong. Let\u0026rsquo;s load again.\nconst Avocado = { name: \u0026#34;Tiffany\u0026#34;, gender: \u0026#34;female\u0026#34;, identity: \u0026#34;global citizen\u0026#34;, roles: [\u0026#34;creator of the blog\u0026#34;, \u0026#34;head chef\u0026#34;], languages: [ { name: \u0026#34;English\u0026#34;, level: \u0026#34;Fluent\u0026#34; }, { name: \u0026#34;Mandarin\u0026#34;, level: \u0026#34;Fluent\u0026#34; }, { name: \u0026#34;Cantonese\u0026#34;, level: \u0026#34;Fluent\u0026#34; }, //not as good as Sloth { name: \u0026#34;German\u0026#34;, level: \u0026#34;Intermediate\u0026#34; }, //almost forget { name: \u0026#34;French\u0026#34;, level: \u0026#34;Beginner\u0026#34; }, //A2 in Duolingo { name: \u0026#34;Japanese\u0026#34;, level: \u0026#34;Beginner\u0026#34; } ], hobbies: [\u0026#34;Cooking\u0026#34;, \u0026#34;Theater\u0026#34;, \u0026#34;Plants\u0026#34;, \u0026#34;Pokemon\u0026#34;, \u0026#34;Reading others\u0026#39; blogs\u0026#34;], skills: [\u0026#34;HTML\u0026#34;, \u0026#34;CSS\u0026#34;, \u0026#34;JavaScript\u0026#34;, \u0026#34;PHP\u0026#34;, \u0026#34;React\u0026#34;, \u0026#34;C#\u0026#34;, \u0026#34;ASP.NET\u0026#34;] }; const Sloth = { name: \u0026#34;Raymond\u0026#34;, gender: \u0026#34;male\u0026#34;, identity: \u0026#34;Hongkonger\u0026#34;, roles: [\u0026#34;contributor of the blog\u0026#34;, \u0026#34;master kitchen assistant\u0026#34;, \u0026#34;Avocado\u0026#39;s hairdryer\u0026#34;], languages: [ { name: \u0026#34;English\u0026#34;, level: \u0026#34;Fluent\u0026#34; }, { name: \u0026#34;Cantonese\u0026#34;, level: \u0026#34;Fluent\u0026#34; }, { name: \u0026#34;Mandarin\u0026#34;, level: \u0026#34;Fluent\u0026#34; }, //not as good as Avocado ], hobbies: [\u0026#34;Football\u0026#34;, \u0026#34;Video Games\u0026#34;, \u0026#34;Music\u0026#34;, \u0026#34;Gym\u0026#34;, \u0026#34;Pokemon\u0026#34;], skills: [\u0026#34;HTML\u0026#34;, \u0026#34;CSS\u0026#34;, \u0026#34;JavaScript\u0026#34;, \u0026#34;PHP\u0026#34;, \u0026#34;React\u0026#34;, \u0026#34;C#\u0026#34;, \u0026#34;ASP.NET\u0026#34;] }; Here it is. You may find our individual blogs in the Authors section of the footer menu below.\n","date":"1 January 0001","permalink":"/gigigatgat/about/","section":"Welcome to GiGiGatGat! üí¨","summary":"Hi there! We are Avocado and Sloth, a couple studying Web Development and living in Ottawa, Canada.","title":"About"},{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. üöÄ\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","date":"1 January 0001","permalink":"/gigigatgat/tags/advanced/","section":"Tags","summary":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing.","title":"Advanced"},{"content":"Check out my awesome friends\u0026rsquo; blogs. Feel free to contact me to exchange links!\n","date":"1 January 0001","permalink":"/gigigatgat/friends/","section":"Welcome to GiGiGatGat! üí¨","summary":"Check out my awesome friends\u0026rsquo; blogs. Feel free to contact me to exchange links!","title":"Friends"},{"content":" Food Made in Our Home Here we share the recipes that we tried and loved the most.\n","date":"1 January 0001","permalink":"/gigigatgat/categories/kitchen/","section":"Categories","summary":"Food Made in Our Home Here we share the recipes that we tried and loved the most.","title":"Kitchen"},{"content":" Our Life and Thought Pieces This section records our thoughts and experiences in daily life.\n","date":"1 January 0001","permalink":"/gigigatgat/categories/life/","section":"Categories","summary":"Our Life and Thought Pieces This section records our thoughts and experiences in daily life.","title":"Life"},{"content":" Books, Games, Music, Movies, Dramas, and Things We comment on our selections, including purchases, viewing history and more.\n","date":"1 January 0001","permalink":"/gigigatgat/categories/review/","section":"Categories","summary":"Books, Games, Music, Movies, Dramas, and Things We comment on our selections, including purchases, viewing history and more.","title":"Review"},{"content":"","date":"1 January 0001","permalink":"/gigigatgat/series/","section":"Series","summary":"","title":"Series"},{"content":"I am not as lazy as a sloth.\n","date":"1 January 0001","permalink":"/gigigatgat/authors/sloth/","section":"Authors","summary":"I am not as lazy as a sloth.","title":"Sloth (Raymond)"}]