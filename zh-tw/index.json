[{"content":" 我的Flag必不會倒！ 之前新年也會斷斷續續地寫對這一年的期望和目標，因為只是寫給自己看，通常非常求其地記在個人備忘錄裡，總是寫完就算，過不了幾個月就拋之腦後，更別提年終時再去回顧上一年的目標是否達成了。新年第一天閒逛了一些友鄰的博客，看了不少2024 flag相關的文章，也有點心癢癢，遂跟之！\n有了博客平台，至少曾經寫下的東西會更容易追溯，心裡也會有個聲音說「這東西可是這一年到頭時要review的，請別太丟臉了」，想來會更有望堅持完成吧！\n學業/職業 # GPA：保持4.0到畢業吧，在加拿大college是個不難達到的目標。 技能：系統性地深入學習git和github，目前的了解還停留在非常表層的階段；根據 Javascript Info來比較全面地複習鞏固JS，再找資源繼續學習React。 實踐：至少做三至五個課業外有質量的side projects，豐富portfolio和cv。 搵工：認真對待每個job search的窗口期，想儘早secure第二份coop job和第一份graduate job。 健康 # 作息：雖然目前還在艱難調時差，希望恢復過來後大部分日子可以維持11:30pm-12:00am睡覺，7:30am-8:00am起床的作息。 護眼：去年眼乾流淚的症狀有變嚴重的趨勢，要更注重眼部護理，畢竟指著電腦吃飯呢。除了用眼藥水之外，培養定時放鬆眼睛、熱敷/濕敷眼睛的daily routine。 鍛煉：如今崴著腳不知何時能恢復鍛煉⋯⋯Anyway，今年一定要開始制定更有針對性更有規律的健身目標，一週（至少）三練，優先級是先把腹部和手臂線條練出來！ 飲食：想要保持每天都有水果攝入，哪怕是冷凍水果/100%果汁呢！其它飯食方面沒什麼特別要改進的，可能儘量選取蛋白質含量更高的肉類食材吧。 理財 # 記帳：嘗試象友白石京推薦的 YNAB記帳軟件。它的邏輯是「每一筆預算前提都來自你已經真正擁有的錢，更直觀地掌握自己的經濟能力以切實影響消費行為」。目前已經註冊帳號完成基礎setup，試用體驗還不錯，期待客服再給我認證學生身份加贈一年試用期，那就更有動力熟悉這個高門檻軟件了。 開源：在保障 學業/職業目標能達成的條件下，繼續兼職打工吧。除了多一份加幣收入很香之外，我自己也很享受打工過程中那種暫時脫離原本的生活軌道，駛入另一片人生側面的體驗感。 收支平衡：我對這一年的期待是用所有加幣收入cover所有加幣支出（九千刀一學期的學費不算⋯⋯），原本淨資產的變化幅度不會很大。很明顯本金融小白也不考慮任何通脹通縮的外在因素和投資收益= =這些以後再補課吧！ 文化娛樂 # 讀書：不敢定太高的目標，先從每個月一本起步吧，已經荒廢讀書習慣很久了。 電影：Same as above。不過今年有了投影儀，應該會更享受家裡觀影的儀式感。 音樂：覺得現在的歌單有點閉塞，都是過去十年積累的廣東歌循環播放，Spotify的隨機推薦也很同質化。要下點功夫開拓下音樂品味才好，開一個新的playlist尋找新歡吧！ 遊戲：曠野之息我再玩一年都不會膩⋯⋯但也有已經買了的星之卡比和怪物獵人需要關照一下！（這算什麼新年目標啊喂） 生活習慣 # 手機屏幕時間：控制每週平均手機屏幕使用時間在2小時以內。更多的使用時間通常是無意識地刷社交軟件，被大數據算法不斷餵食本身無計劃攝入的內容引起的，想要盡可能避免在這一點上浪費時間。 家務：清潔是不能犯懶的，拖著拖著只會越來越難清潔。要更加嚴格地以每兩週一次的頻率清潔檯面和地面，尤其是臥房和浴室。 Blog：建站時立下的flag是bi-weekly一篇，就算沒那麼準時也請保持平均每月兩篇的節奏吧！ 目前能想到的就這些，覺得可實踐性還是很強的。結尾附一張在東京淺草寺求來的吉籤吧，解籤語中說「洗出舊根基」，意為「Washing up those bad which stuck to the old root to refresh its life」，蠻適合這新年新氣象的兆頭。雖然我本來已經很好了，新的一年我也會成為更好的自己呢！ ","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/posts/2024-new-year-resolutions/","section":"博客","summary":" 我的Flag必不會倒！ 之前新年也會斷斷續續地寫對這一年的期望和目標，因為只是寫給自己看，通常非常求其地記在個人備忘錄裡，總是寫完就算，過不了幾個月就拋之腦後，更別提年終時再去回顧上一年的目標是否達成了。新年第一天閒逛了一些友鄰的博客，看了不少2024 flag相關的文章，也有點心癢癢，遂跟之！\n有了博客平台，至少曾經寫下的東西會更容易追溯，心裡也會有個聲音說「這東西可是這一年到頭時要review的，請別太丟臉了」，想來會更有望堅持完成吧！\n學業/職業 # GPA：保持4.0到畢業吧，在加拿大college是個不難達到的目標。 技能：系統性地深入學習git和github，目前的了解還停留在非常表層的階段；根據 Javascript Info來比較全面地複習鞏固JS，再找資源繼續學習React。 實踐：至少做三至五個課業外有質量的side projects，豐富portfolio和cv。 搵工：認真對待每個job search的窗口期，想儘早secure第二份coop job和第一份graduate job。 健康 # 作息：雖然目前還在艱難調時差，希望恢復過來後大部分日子可以維持11:30pm-12:00am睡覺，7:30am-8:00am起床的作息。 護眼：去年眼乾流淚的症狀有變嚴重的趨勢，要更注重眼部護理，畢竟指著電腦吃飯呢。除了用眼藥水之外，培養定時放鬆眼睛、熱敷/濕敷眼睛的daily routine。 鍛煉：如今崴著腳不知何時能恢復鍛煉⋯⋯Anyway，今年一定要開始制定更有針對性更有規律的健身目標，一週（至少）三練，優先級是先把腹部和手臂線條練出來！ 飲食：想要保持每天都有水果攝入，哪怕是冷凍水果/100%果汁呢！其它飯食方面沒什麼特別要改進的，可能儘量選取蛋白質含量更高的肉類食材吧。 理財 # 記帳：嘗試象友白石京推薦的 YNAB記帳軟件。它的邏輯是「每一筆預算前提都來自你已經真正擁有的錢，更直觀地掌握自己的經濟能力以切實影響消費行為」。目前已經註冊帳號完成基礎setup，試用體驗還不錯，期待客服再給我認證學生身份加贈一年試用期，那就更有動力熟悉這個高門檻軟件了。 開源：在保障 學業/職業目標能達成的條件下，繼續兼職打工吧。除了多一份加幣收入很香之外，我自己也很享受打工過程中那種暫時脫離原本的生活軌道，駛入另一片人生側面的體驗感。 收支平衡：我對這一年的期待是用所有加幣收入cover所有加幣支出（九千刀一學期的學費不算⋯⋯），原本淨資產的變化幅度不會很大。很明顯本金融小白也不考慮任何通脹通縮的外在因素和投資收益= =這些以後再補課吧！ 文化娛樂 # 讀書：不敢定太高的目標，先從每個月一本起步吧，已經荒廢讀書習慣很久了。 電影：Same as above。不過今年有了投影儀，應該會更享受家裡觀影的儀式感。 音樂：覺得現在的歌單有點閉塞，都是過去十年積累的廣東歌循環播放，Spotify的隨機推薦也很同質化。要下點功夫開拓下音樂品味才好，開一個新的playlist尋找新歡吧！ 遊戲：曠野之息我再玩一年都不會膩⋯⋯但也有已經買了的星之卡比和怪物獵人需要關照一下！（這算什麼新年目標啊喂） 生活習慣 # 手機屏幕時間：控制每週平均手機屏幕使用時間在2小時以內。更多的使用時間通常是無意識地刷社交軟件，被大數據算法不斷餵食本身無計劃攝入的內容引起的，想要盡可能避免在這一點上浪費時間。 家務：清潔是不能犯懶的，拖著拖著只會越來越難清潔。要更加嚴格地以每兩週一次的頻率清潔檯面和地面，尤其是臥房和浴室。 Blog：建站時立下的flag是bi-weekly一篇，就算沒那麼準時也請保持平均每月兩篇的節奏吧！ 目前能想到的就這些，覺得可實踐性還是很強的。結尾附一張在東京淺草寺求來的吉籤吧，解籤語中說「洗出舊根基」，意為「Washing up those bad which stuck to the old root to refresh its life」，蠻適合這新年新氣象的兆頭。雖然我本來已經很好了，新的一年我也會成為更好的自己呢！ ","title":"2024 New Year‘s Resolutions"},{"content":"你也喜歡牛油果嗎？\n","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/authors/avocado/","section":"作者","summary":"你也喜歡牛油果嗎？","title":"Avocado (Tiffany)"},{"content":"","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/categories/","section":"分類","summary":"","title":"分類"},{"content":" Our Life and Thought Pieces ","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/categories/life/","section":"分類","summary":" Our Life and Thought Pieces ","title":"日常札記"},{"content":"","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/authors/","section":"作者","summary":"","title":"作者"},{"content":"","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/posts/","section":"博客","summary":"","title":"博客"},{"content":"","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/tags/%E6%96%B0%E5%B9%B4/","section":"標籤","summary":"","title":"新年"},{"content":"","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/tags/","section":"標籤","summary":"","title":"標籤"},{"content":"哈嘍！歡迎來到Avocado和Sloth的共享博客，我們會在這個老巢嘰嘰乞乞（廣東話短語，約等於嘰嘰喳喳）生活裡的一切，包括且不限於轉碼心得，廚房故事，日常札記和萬物測評。有時候我們也會邀請一些朋友來共享這個空間，發布屬於ta們的作品，文字萬歲！\n🥑 Avocado (Tiffany): 女的，INFJ，著迷草木山海裡的每一種綠色，身份是家庭大廚\n🦥 Sloth (Raymond): 男的，INFP，痴迷足球和打機，身份是值得尊重的大師級廚房助手\n本站英文界面只包含英文內容，中文界面則會包含中英文在內的所有內容。 ","date":"2 January 2024","permalink":"/gigigatgat/zh-tw/","section":"歡迎光臨嘰嘰乞乞/GiGiGatGat! 💬","summary":"哈嘍！歡迎來到Avocado和Sloth的共享博客，我們會在這個老巢嘰嘰乞乞（廣東話短語，約等於嘰嘰喳喳）生活裡的一切，包括且不限於轉碼心得，廚房故事，日常札記和萬物測評。有時候我們也會邀請一些朋友來共享這個空間，發布屬於ta們的作品，文字萬歲！\n🥑 Avocado (Tiffany): 女的，INFJ，著迷草木山海裡的每一種綠色，身份是家庭大廚\n🦥 Sloth (Raymond): 男的，INFP，痴迷足球和打機，身份是值得尊重的大師級廚房助手\n本站英文界面只包含英文內容，中文界面則會包含中英文在內的所有內容。 ","title":"歡迎光臨嘰嘰乞乞/GiGiGatGat! 💬"},{"content":"","date":"31 December 2023","permalink":"/gigigatgat/zh-tw/tags/%E5%8A%A0%E6%8B%BF%E5%A4%A7/","section":"標籤","summary":"","title":"加拿大"},{"content":"","date":"31 December 2023","permalink":"/gigigatgat/zh-tw/tags/%E6%AF%8F%E6%9C%88%E5%B0%8F%E7%B5%90/","section":"標籤","summary":"","title":"每月小結"},{"content":" 新年快樂！ 十二月太忙啦！又final又提車又回國又旅行，日程塞得滿滿當當，看了下每個星期的平均手機屏幕使用時間都在2到3小時左右，和之前比也是低了不少。但心裡也有條底線是——再忙也至少要寫一篇blog吧！還是在年終這個節點！所以幾乎是踩著ddl趕出來這篇回顧。\n本月Milestones # 考到G牌拎到車 # 謝天謝地跳考G牌一次過啦！本來以為回國前預約不到考位了，每天抱著僥倖心態上網站刷刷還真刷出來一個十二月初的合適時間。考前又突擊練習了2.5堂課，特別是臨考前的一小時和教練重新走了幾遍路線，感覺對溫習考試注意點和鎮定心態非常有用。整體學車上了六節課吧，加上考試租教練用車花費大約490刀，算是一筆較合理的費用支出。\n車是兩個月前就訂下的，也在十二月初完成了交接。買的是一輛有點年頭但各方面性能都還不錯的手動檔斯巴魯，雜七雜八的費用加起來在五千刀左右。比市場價便宜許多，因為是健身房相識的姐姐想賣車剛好被我撞上了，有些友情價的意思。\n接下來的計劃是潛心修習手動檔開車技巧，特別是低速行駛和停車再啟動時對離合和檔位的掌控要再精進一下！否則neighborhood遍地的stop sign太容易熄火了嗚嗚。 （回家路上lyft司機開的也是一輛手動檔，開得好順滑，搞得我聚精會神觀察了一路他的操作手法）\n時隔一年回家嚕 # 考完final就踏上了回國的航班。我不是一個特別思鄉思家的人，這次決定回家一方面是有些生活瑣事想儘快處理，另一方面也是知道下次回家遙遙無期。我想留在加拿大的決定對家人來說依然是個秘密，和他們對我的未來期許完全相反。我無法預計攤牌後的爭執激烈程度，索性決定下次至少得拿到pr才考慮回國。這次回家更像是一種緩衝期的作用。\n我的一個矛盾點是我離家遠走的渴求那樣大，但我不是不愛家人，我從家人那兒得到的愛也不可謂不多。我爸會給我一邊發微信紅包一邊說老爸想你啦，媽媽更是隔三岔五就和我視頻通話。我還有兩個很可愛的小姪女，我去接她們放學時她們會飛奔過來環抱住我，在家吃飯時她們會強烈要求我坐在她們中間，和她們在一起時我會偷得一些無需為人母卻被依戀的幸福感。但這種幸福感不可能持久，一個星期已經很足夠。與闔家團圓相比，我非得擁有個人空間的自由以獲取自我滿足不可。距離，長距離，是最直接的解法，卻是我單方面的解法。我要如何滿足家人的情感需求呢？我好像只能讓他們逐漸習慣於我的缺席，在他處另覓滿足。\n這次回家還把對象帶回去住了七天，其實只是為了方便安排行程之後一起旅遊。但是從老中家庭的角度出發就是：啊你要和這個人結婚了吧。我覺得不能慣著這種約定俗成，我想一起回家就一起回家，它可以完全不代表什麼，這個婚誰愛結誰結。親密關係有那麼多種形式，我（目前還）不願意走人們最習慣的那一種。\n東京七日遊 # 第一次去日本玩！最深刻的印象是廁所都好乾淨好舒服，智能馬桶是每個公共廁所的標配。很好笑的一點是日本公廁的智能馬桶會自動播放流水聲以掩蓋如廁發出的聲音⋯⋯這很日本人，也很自欺欺人。我就建議人不要給自己施加這麼多來自外部眼光的壓力自尋尷尬。\n我們行程規劃得很隨意，想吃的店因為沒預約或者要排隊一家都沒吃上哈哈哈，但隨機walkin的店也都沒踩雷。最快樂的是在河口湖住了一泊二食且帶私人風呂的富士湖酒店，打開溫泉前的窗戶就是富士山景，咔咔拍照都拍不出一張相可以傳遞眼見的震攝感。 最衰的是最後一天原本要去橫濱的UNIQLO PARK大逛特逛，結果左看右看太高興臨進門前崴了腳。（我怎麼每個月都在受傷ΩДΩ）於是只能在海港前的凳子上擱著腳遠程遙控Sloth我要哪對襪子哪條秋褲哪條內褲= =\n本月碎碎念 # 登陸一週年 # 已經在加拿大過了一整年了啊。這一年我生活得很滿足：\n與想像中的挑戰難度相比，轉碼學習給我帶來的成就感更多，還算游刃有餘； 課業壓力不大，我還在coop job search term的第一輪早早鎖定了理想的position，新的一年又會開啟專業實習的新嘗試； 第一次做兼職，早班要求讓我硬生生拗正了作息習慣，精神狀態也隨之變得更好； 在開學的第一天認識了Sloth，很高興一路可以一起走過，有這樣一個人接納我所有好的壞的情緒，吹了我快一年的頭髮，共尋共享日子裡的微末趣味； 很喜歡渥太華的生活節奏，又慢又靜，它沒有那麼繁華，卻正對我的胃口。未來會考慮繼續在這座城市生活下去的！ 簡單的新年願望 # 學更多嘢：轉碼後「學無止境」的感受是最強烈的。這個領域有那麼多新東西可以學，我像是剛出新手村四處撿新武器開新地圖的林克，對這片大陸充滿新鮮感和探索慾。2024我會有兩個work term，會畢業，會掌握更多更深的專業技能，最好能簽下畢業後第一份正職工作的約。 寫更多blog：寫blog和看blog都讓我感到幸福。請堅持探索並表達更豐富的生活和精神世界吧！ 做更多gym：今年算是剛剛入門，希望在新的一年加強鍛煉的頻率和強度，早日練出大肌肌💪。 愛更多人：可能因為時差距離、新的親密關係、現實生活的繁忙度，種種原因都讓我和以往在意的人和事的聯繫不可避免地減少了。不管是維護舊感情還是建立新關係，新的一年我想要更有意識地去表達愛和關心，去付出時間和精力，更少沉浸在個人的小世界。 博客更新 # 什麼都沒更新應該是可以skip這part的吧（喂。總之會把十一月立下的flag一一寫完先，一個無人在意的好消息是Sloth拖著拖著終於也快拖出一篇文來了，敬請（不必）期待。\n一瘸一拐著回到加拿大的家了，舟車勞頓之後更想念之前有規律有生產力的生活。希望腳踝可以快快恢復重新活蹦亂跳起來！也在此祝大家新年好好走路，踩穩每一步！\n","date":"31 December 2023","permalink":"/gigigatgat/zh-tw/posts/dec-2023-recap/","section":"博客","summary":"新年快樂！ 十二月太忙啦！又final又提車又回國又旅行，日程塞得滿滿當當，看了下每個星期的平均手機屏幕使用時間都在2到3小時左右，和之前比也是低了不少。但心裡也有條底線是——再忙也至少要寫一篇blog吧！還是在年終這個節點！所以幾乎是踩著ddl趕出來這篇回顧。\n本月Milestones # 考到G牌拎到車 # 謝天謝地跳考G牌一次過啦！本來以為回國前預約不到考位了，每天抱著僥倖心態上網站刷刷還真刷出來一個十二月初的合適時間。考前又突擊練習了2.5堂課，特別是臨考前的一小時和教練重新走了幾遍路線，感覺對溫習考試注意點和鎮定心態非常有用。整體學車上了六節課吧，加上考試租教練用車花費大約490刀，算是一筆較合理的費用支出。\n車是兩個月前就訂下的，也在十二月初完成了交接。買的是一輛有點年頭但各方面性能都還不錯的手動檔斯巴魯，雜七雜八的費用加起來在五千刀左右。比市場價便宜許多，因為是健身房相識的姐姐想賣車剛好被我撞上了，有些友情價的意思。\n接下來的計劃是潛心修習手動檔開車技巧，特別是低速行駛和停車再啟動時對離合和檔位的掌控要再精進一下！否則neighborhood遍地的stop sign太容易熄火了嗚嗚。 （回家路上lyft司機開的也是一輛手動檔，開得好順滑，搞得我聚精會神觀察了一路他的操作手法）","title":"寫在最後一天匆匆忙忙的十二月小結"},{"content":" 一開始覺得好不容易但是越寫越開心了！ 打開一個空文檔然後愣住，我到底要寫些什麼？流水一樣活過去的日子像天上的星星明明暗暗，想重新一顆顆抓回來看個真切也難。時間的概念也模糊，想不起一些事到底是發生在十月還是在十一月，但——這又有什麼重要的呢。看了些友鄰的每月小結博客，最後決定仿照 第三夏爾（我最喜歡看的每月小結！）的結構去梳理自己這個月做了什麼，有哪些值得分享的大事小事。我寫得還算認真，你且先將就看著：\n本月Milestones # 練車迎來曙光 # 因為終於預約了下月初的G牌考試！只有一次跳考機會，所以我慎之又慎，希望能夠一鼓作氣考過！（畢竟車已經買了，考不過只能拿著G1在家裡養著車也太慘了。）雖然我擁有看起來5年駕齡的國內駕照，但實際上路經驗一雙手都數得過來。十月初開始每個星期斷斷續續練2小時車也練了有五六次了，從第一堂課還要學steering control到如今終於對考試有點信心啦！\n目前覺得上下高速都不難，最有挑戰性的部分是開出Drive Test Center轉彎併入車流時，對左右來車的距離判斷和駛入中央分隔帶或對面車道的起始速度把控（教練說我總是錯過機會或者太慢了🥹）。Anyway這星期會再針對這個弱點多加練習！然後下星期考試！老天保佑！\nBtw我找的是本地教練，收費可以說是全網最低，70刀兩小時，和其他教練60刀一小時的均價相比感天動地。人在Ottawa又有練車需要的網友可以戳我推薦（無利益相關）。\n黑五買買買 # 一早聽說Shoppers有黑五250刀積分換400刀的膨脹活動，這一年下來靠Loblaws的週二學生積分日和Shoppers常有出沒的二十倍積分offer，竟和對象一起攢出了750刀積分——然後在黑五換成1200刀全redeem了。因為是第一年在加拿大，確實有很多東西想添置，這次一口氣買了耳機鍵盤投影儀還有dyson吹風機和switch，生活質量大提升！\n很同意象友這條關於北美售後服務體驗的 嘟串。我之前買東西都沒有去官網登記的習慣，這兩天在dyson官網登記了產品序列號，看到黑五有complimentary gift的offer，雖然說“only at Dyson”，但打了個客服電話也爽快一起送了$170的梳子和收納盒。還在philips登記了新買的電動牙刷，發現原來買後30天內登記可以多一年的warranty，三年內壞了都可以聯繫保修或者直接以舊換新。穩穩的很安心σ(≧ε≦ｏ)\n其他買的七七八八的也不贅述了，如果有特別好用或者難用的再專門分享/吐槽吧！目前最滿意的購入還有Winners淘到的20刀14inch義大利鐵鍋，但鍋這種東西日久見真章，用個半年再看看。\n煎牛排新晉高手 # ——我自封的。這個月煎牛排也越來越熟練了呢！參考了 小高姐和一個 台灣YouTuber的教程，前者只需要開火一次且順帶了醬汁，後者會在第一次大火煎完醒肉後再回鍋小火煎，我自己覺得都挺方便的。而且去Loblaws採購會經常看到真空包裝的冷藏牛排，少了一個解凍的過程也很舒心。 本月碎碎念 # 健身掙扎期 # 學業、打工、博客⋯這個月的瑣碎事堆下來總覺得不夠時間再分給健身。也有一部分原因是天氣凍下來懶得穿穿脫脫( ≧Д≦)。昔日室友 老全建了個運動打卡群，結果我和她兩個人在群裡連著十幾天以靜制動，敵不動我不動，展現了驚人的耐心品質。可惜這個平衡戰局剛剛被打破了，所以我也要振作起來重回健身routine，萬不能輸給老全！\n燙傷護理 # 一周前打工時不小心觸碰到了grilling machine的邊緣被燙傷，小臂上留了道5cm長的疤痕。當時正值午餐高峰期，我還記掛著等餐的顧客沒第一時間去沖冷水。事後想來真是，有些責任感大可不必一力承擔的）第一時間請同事幫忙接手才是比較好的處理方式。\n燙傷後必須儘快用冷水沖洗足夠長的時間才能有效消減疼痛，網上搜到的時間建議一般是15至30分鐘。我可能就沖了一兩分鐘吧⋯⋯我還犯了個錯就是直接用冰塊冷敷傷口，但這個做法反而會加劇對傷口的刺激。還好燙傷的程度也不算太嚴重，是我能忍到的疼痛程度。現在在Shoppers買了盒Mederma的scar cream每晚塗抹一次，不知道最後效果如何。打字的時候傷口已經到了最癢的結痂階段，我在此嚴正告誡我自己：管好你的手！別摳！\n雪天二三事 # 十一月的雪下得越來越頻繁，加拿大也轉了冬令時，冬天真的來啦！好喜歡視察下雪後行人道上留下的狗爪印子awww一朵一朵小梅花： Sloth喜歡踢球，昨天回家時從巴士站踢回來一團凝固的雪球。過了兩個小時我們出門去超市，走出去兩分鐘他又跑回家門口，我以為他忘帶啥了結果他說忘了踢這塊雪球出來 ლ(⁰⊖⁰ლ)，然後就一路踢去超市。比空氣籃球更過分/過癮的莫過於非空氣足球！ 哥哥說天氣冷了讓我買件好點的羽絨服他報銷(≧∇≦)/。覺得加拿大鵝太厚重還是買了Aritzia Super Puff給老哥省錢嘿嘿。說是也能扛零下二十度，再過一個月看看是不是誠不欺我。 博客更新 # 已發布 # 寫了三篇！不算太懶！\nA Beginner-Friendly Tutorial for Building a Blog with Hugo, the Blowfish Theme, and GitHub Pages：因為我自己在建站的過程中搜了無數教程，一度雲裡霧裡畏手畏腳，現在熬出頭了希望能為人撐傘！對於有足夠coding知識的人來講這篇文章可能顯得很贅述，但我就是以零門檻視角出發寫的步驟。我有不少現實中的朋友擁有敏銳的生活感知力，我也很喜歡她們的文字，如果能把至少其中一個拽進博客宇宙我也心滿意足了～在漫漫互聯網裡能幫到其他人就更好啦。 How to Install a Specific Version of Hugo on macOS：這篇完全是搭建博客教程的衍生篇，因為我確實遇到了最新版本的hugo和theme版本不兼容的問題，就順勢搜了解法寫了這篇。它其實是在電腦上裝了兩個版本的hugo，需要哪個就調哪個路徑上的版本來用。 我的人生廣東歌（一）：極私人的音樂和人生旅程分享。就像在文裡說的，它們是「塑造了我之所以成為我的」廣東歌，在我心裡喚起的共鳴和對我的影響是無可取代。歡迎你來聽。 小預告 # 《Tims打工記 附菜單不完全點評》：已經在學校Tims打工三個月了！不知道有沒有人和我一樣有點單困難症，看著不斷閃動的電子屏已經很焦躁了更別提定制化點單了。我現在算是把Tims大部分菜單吃透了，也有了比較明確的口味偏好，可以整理整理心得供大家參考。 《我的人生廣東歌（二）》：歌是已經選定的，要掏心掏肺地寫是要拖延的。照目前的日程安排不知道年底前能不能寫出來hahaha，放在預告裡也算是表露下我不鴿的決心吧！ 書影音遊 # 很慚愧，沒怎麼看書，只是在上下學的巴士上斷斷續續地看會兒《綠山牆的安妮》。我小時候沒看過這本書，現在長大了再看，更能體會到安妮的稀有和珍貴——好恣意好天然，放任情感和想像力流動的生命。 這個月的下飯劇是《甄嬛傳》和《麻醉風暴》，現在在看《一把青》和《Our Planet2》。原來這是我第一次完整看完甄嬛傳！之前總是還沒看到甘露寺就因為種種原因擱置了。2023年才看完的一個感受就是甄嬛傳台詞真的養了我們很多年的互聯網文化 (屮゜Д゜)屮 開玩Switch！目前在玩塞爾達、小小夢魘2、PICO PARK和海綿寶寶攤煎餅（。PICO PARK是之前看3080車隊聯機種草的，應該人越多越好玩，歡迎找我和Sloth聯機！ ","date":"30 November 2023","permalink":"/gigigatgat/zh-tw/posts/nov-2023-recap/","section":"博客","summary":"一開始覺得好不容易但是越寫越開心了！ 打開一個空文檔然後愣住，我到底要寫些什麼？流水一樣活過去的日子像天上的星星明明暗暗，想重新一顆顆抓回來看個真切也難。時間的概念也模糊，想不起一些事到底是發生在十月還是在十一月，但——這又有什麼重要的呢。看了些友鄰的每月小結博客，最後決定仿照 第三夏爾（我最喜歡看的每月小結！）的結構去梳理自己這個月做了什麼，有哪些值得分享的大事小事。我寫得還算認真，你且先將就看著：\n本月Milestones # 練車迎來曙光 # 因為終於預約了下月初的G牌考試！只有一次跳考機會，所以我慎之又慎，希望能夠一鼓作氣考過！（畢竟車已經買了，考不過只能拿著G1在家裡養著車也太慘了。）雖然我擁有看起來5年駕齡的國內駕照，但實際上路經驗一雙手都數得過來。十月初開始每個星期斷斷續續練2小時車也練了有五六次了，從第一堂課還要學steering control到如今終於對考試有點信心啦！","title":"當一個忘性很大的人嘗試寫十一月小結"},{"content":" 「感謝永遠有歌 把心境道破」 我聽廣東歌的時間不算短也不算長，上大學之前聽得多的只有陳奕迅（。在香港呆久了才慢慢領略到更多廣東歌的妙處，到如今歌單已經是廣東歌的天下了。\n好聽的歌在我心裡分作這麼幾種：\n是個人都會覺得好聽的（說不好聽的會被我開除人籍） 能放進歌單裡無限循環的 有與我直擊心扉的剎那的 塑造了我之所以成為我的 珍稀程度逐層遞減，最後一種是最難得也最私人的。我挑出了七首作為我的人生廣東歌，沒有高低先後排序，它們的共同點是都在我人生的不同階段留下磨不滅的印記，或陪我走過低谷，或教我挺直脊骨。我感激這些歌的出現，也想盡力描述下它們之於我的好處。\n一些說在前面的話：看到你厭憎的歌手請隨便翻白眼。我的態度是人與作品分離，愛屋或許及烏，恨人卻不至於恨歌。一首歌不是獨屬於歌手一個人的產物，我只「感謝永遠有歌 把心境道破」。 《苦瓜》 # 演唱：陳奕迅\n作詞：黃偉文\n作曲/編曲：Kenix Cheang@Private Zoo\n監製：舒文@Zoo Music\n說來也好笑，《苦瓜》唱的是半生的感悟，我卻在十六七歲的時候就故作老成地沉浸在這首歌的意境裡。家裡本從不做苦瓜的菜，我還特地要求買來嚐味，堅持了幾個月後來再也沒主動吃過了（。\n這首歌的主旨簡單，無非是先苦後甜的人生大道理，但好就好在意象的選擇和歌詞的韻味。苦瓜又稱半生瓜，據說有兩種解釋。一是平時食用的苦瓜本身是尚未成熟的狀態，是為半生，這個生長階段的苦瓜甘苦清脆，比完全成熟發軟的甜味苦瓜更有口感；二是人年輕時往往不懂欣賞苦瓜的味道，活到半生，歷經百態，才嚐得出苦瓜的餘味，真正認同並喜愛苦瓜。\n對我來說，《苦瓜》出現得恰到好處。早一點或晚一點，離了那段時間恐怕也不會有反覆縈繞我心的共鳴。我的中學時期好像過山車般的循環，每次都是第一年滑到低谷，後兩年再慢慢慢慢爬上高處。也不是蓄意如此，只是入學第一年總是拍拖、貪玩、怠惰、叛逆，不願做標準意義的好學生，成為全班倒數也是家常便飯。高一下半年我被勸休學，無關心理身體健康狀態，我到現在都覺得只是因為那個班主任嫌我拖了實驗班aka好學生班的後腿。與做學校差生相比，休學後待在家裡的時間更讓人抑鬱，除去無聊、寂寞不說，我更容易聽得到來自家人的失望和旁人的奚落，自己情緒崩潰的次數也就更頻繁。\n我決定給自己掙一口氣。於是開始邊聽著「開始時捱一些苦 栽種絕處的花」邊埋頭苦學，結果也是「幸得艱辛的引路甜蜜不致太寡」，得了番春風得意馬蹄疾的時光。\n這首歌像是我在逆境時期的精神支柱，要說雞湯也有些雞湯，但我和黃偉文絕不是要弘揚吃苦文化哈。《苦瓜》的角度更多是苦盡甘來之後，莞爾一笑，已與往日和解的灑脫開懷。「珍惜淡定的心境 苦過後更加清 萬般過去亦無味但有領會留下」現在回頭看去，所謂的正道歧途，高山低谷，我不後悔我走過的任何一段路。該玩的我已玩過了，該學的我已學過了，捱過的苦不覺得太差，花心的甜蜜也不致太寡。我慶幸我是這樣長大的。\n《美麗新香港》 # 演唱：何韻詩\n原唱：My Little Airport\n作詞：林阿P\n作曲/編曲：林阿P\n何版編曲：何秉舜\n如果說《苦瓜》多多少少激我奮進，《美麗新香港》就讓我悵然若失了。我領著全獎歡歡喜喜去了香港唸書，卻不知最後見證的是如此一個美麗新香港。就像歌詞裡所唱的那樣，「命運要令我學識奮鬥 但我只懂得荒謬」。在全面崩塌的文明面前，世俗意義上的個體成就實在是微不足道。\n小飛機場原版的《美麗新香港》帶著種諷刺的輕快旋律，我更常聽的是何韻詩十八種香港 Reimagine HK 2015演唱會版本，何丙改編的旋律下更顯直白深重的鄉愁。懷念的不是別的，正是那個被摧毀被遺棄的香港面貌。\n「這香港已不是我的地頭 就當我在外地飄流」，九年前的詞作放在當下也是如此應景，選擇漂流外地的人也越來越多。就是帶著對香港的企盼前來的非港人，屁股還沒坐熱也急匆匆地趕著要走了。並非不留戀香港，只是失去了我們想要的香港。「我知已走到盡頭 為何還要擔憂 這世界也不是我的地頭 就當我在宇宙飄流」。心裡牽繫的地方，境況再差也捨不下那分在意。離散在外，對香港的情感和認同又能在世界的哪個角落復刻呢？不怕被笑，就算我只在香港暫居了四年，我心中對這個城市的歸屬感也是其它任何一個城市都不能比擬的。家鄉城市閒適安逸，卻不及香港鮮活有心氣。只是這個璀璨都市光輝到此，和許許多多人一樣，我們都成了在宇宙漂流的異鄉人。\n這首演唱會版本的《美麗新香港》的特別之處是，它以《東方之珠》為前奏，《鐵塔凌雲》為間奏，最後以英國國歌《God Save The Queen》到中國國歌《義勇軍進行曲》的承接作為收尾。\n我嘴笨，很難形容這種排布帶出的感慨，只能略作背景介紹供大家感受：《東方之珠》是創作於九七回歸背景的歌曲，唱東方之珠的滄桑，唱東方之珠的璀璨，更唱對這座城的深重情意和祝福。發行於1972年的《鐵塔凌雲》是飽含香港情懷的時代曲，意旨為「走遍世界各地，還是覺得香港最適合自己」（來源： 《就此模樣／鐵塔凌雲》五十年）。這首歌被視作現代流行廣東歌的開端，在《鐵塔凌雲》之前，香港樂壇的主流是粵劇、國語歌、英文歌；在《鐵塔凌雲》之後，廣東歌的發展才進入一個新時代，隨著廣東歌地位提升的還有越來越強的港人主體意識。兩首國歌自不必說，九七交接，時代謝幕又開幕，我們身在其中共浮沉。\n關於更多香港歷史的了解，在此推薦一本 《香港簡史》，作者高馬可，譯者林立偉。我購於太子留下書舍，也希望有能力的大家多多支持本地獨立書店。\n《滿地可》 # 演唱：何韻詩\n作詞：黃偉文\n作曲：周國賢\n編曲：英師傅\n監製：青山大樂隊 hocc@goomusic\n滿地可是廣東話中Montreal的城市譯名，也是我們小何長大的城市。在說這首歌於我的意義之前，談這首歌就避不開小何的人生軌跡。相信黃偉文為她填詞時就是比著她的人生之歌來寫的。\n她在香港出生，1988年隨家人移居來到這個法語區城市生活，又在1996年回到香港，參加歌唱比賽、奪冠、出道、沒有一炮而紅。初次簽約的唱片公司財務不佳，她出道五年才得以發行第一張個人EP（也是質量很高的一張EP！重聽各種版本《光榮之家》和《千千萬萬個我》的我總是流淚貓貓臉）。她的事業由此起步，此後連續七年成績斐然，每年都有至少一首三台冠軍歌，更在2006年獲得「叱吒樂壇女歌手金獎」（雖然獎座已經被她當垃圾丟了）、2010年入圍台灣金曲獎最佳國語女歌手獎最後五強。在她之前，也只有葉蒨文丶林憶蓮丶王菲及莫文蔚曾以香港歌手身份入圍金曲獎該獎項。\n「很多人對何韻詩的印象已經是停留在2014年後她頻繁為社會事務發聲的時刻。感覺上好像繁星下落凡間，久而久之大家都覺得她平凡不過。很多人忘記了何韻詩曾經是一個怎樣顯赫的歌手。」 ——張崑陽\n回到2008年，《滿地可》發行時正值她的事業高峰。在這樣的背景下回首來處，少時學著吉他「空想的冠軍歌」已不再是夢，「就算跌跌碰碰 活了這些年」，她也能夠昂然回答 「曾經愛過的 都有追 蠻力尚未有累」。這首歌是有這樣的妙處，不同的時期唱著聽著便是全然不同的感受。活過的經歷越來越多，她的自我也愈見鮮明豐富。曾經愛過的不只是純粹的音樂夢，對弱勢群體的支持、對同志身分的驕傲、對民主自由的追求⋯都漸漸成為了其中堅固的一部分。她可以為之驕傲的也不僅僅是她的音樂成就，而是她更完全的個體自我。但這個過程又談何容易，要重新唱出「曾經愛過的 都有追 蠻力尚未有累」的代價是越來越大的。她卻做得到。無論何時何地何境遇，她踐行的就是一條宗旨：「仍不愧面對 出發時熱血之驅」。\n我怎麼能不愛上這樣的人！我怎麼能不被吸引著模仿她的心氣風骨靈魂。聽《滿地可》，我一見鍾情的Live版本是2013 Memento演唱會。用手機錄了存在本地視頻裡，離家飛加拿大的那趟航班上，我就手動反覆循環這段視頻。只聽是不夠的，我愛極了唱到最後一段副歌（YouTube視頻版本7:40）時她的一舒眉一頓首，那樣坦蕩張揚的堅毅神情。我想著我是怎樣走來，又要往哪裡行去，我知道我是如何私自做了人生最重大決定，我想象我將如何一力闖蕩屬於我定義的生活，我許願我留下的也是她那樣的神情。問心無愧，邁步無悔，心志無改。\n寫了這三首發現篇幅就已經好長了，遂切割之。未完待續，不必期待！\n","date":"20 November 2023","permalink":"/gigigatgat/zh-tw/posts/my-fav-cantonese-songs_1/","section":"博客","summary":"「感謝永遠有歌 把心境道破」 我聽廣東歌的時間不算短也不算長，上大學之前聽得多的只有陳奕迅（。在香港呆久了才慢慢領略到更多廣東歌的妙處，到如今歌單已經是廣東歌的天下了。\n好聽的歌在我心裡分作這麼幾種：\n是個人都會覺得好聽的（說不好聽的會被我開除人籍） 能放進歌單裡無限循環的 有與我直擊心扉的剎那的 塑造了我之所以成為我的 珍稀程度逐層遞減，最後一種是最難得也最私人的。我挑出了七首作為我的人生廣東歌，沒有高低先後排序，它們的共同點是都在我人生的不同階段留下磨不滅的印記，或陪我走過低谷，或教我挺直脊骨。我感激這些歌的出現，也想盡力描述下它們之於我的好處。","title":"我的人生廣東歌（一）"},{"content":"","date":"20 November 2023","permalink":"/gigigatgat/zh-tw/tags/%E9%A6%99%E6%B8%AF/","section":"標籤","summary":"","title":"香港"},{"content":"","date":"20 November 2023","permalink":"/gigigatgat/zh-tw/tags/%E5%BB%A3%E6%9D%B1%E6%AD%8C/","section":"標籤","summary":"","title":"廣東歌"},{"content":" Everyone deserves to own a blog. I\u0026rsquo;m here to help. 中文版特供前言:\n此文獻給所有想建博客卻苦於難以入門的朋友。\n作為也才轉碼十個月的新手，我深知那種熟悉一個新的工具、配置一個新的環境的迷茫和挫敗感。特別是對於零coding基礎的人而言，建站這個概念可能一開始就已經讓他們望而生畏。這篇文章的閱讀時間是14分鐘，如果一步一步跟做，預估時間會在1-3小時左右，取決於configuration部分定制化的複雜程度和是否衍生閱讀。如果你花的時間更長一點也不要緊，畢竟我從頭嘗試建站+寫這篇教程用了足足將近三個星期的時間。如果你在某一步卡殼無法繼續，歡迎留言提問或者直接聯繫我。\n我的方案可能不是最優最普遍的做法。相比網上搜索到的其他教程，我只用了一個GitHub repository而非兩個。GitHub Actions的自動部署也還沒搞明白，歡迎路過的大神指教😭。但我可以確保的是我將所有步驟和注意點寫得足夠詳細，並成功試驗了一遍教程所示的建站和更新流程，順便再擺個 demo版的repository供大家回頭參考。\n我希望通過這篇小白級教程最小化免費建站的門檻，誘騙？ 邀請更多朋友加入我們復興博客宇宙的宏圖大業！\nThere are numerous ways to build a blog. You can choose popular platforms like WordPress, Medium, or Notion for simplicity, or craft static web pages using frameworks like Hugo and Hexo if you\u0026rsquo;re comfortable with a touch of coding. My personal preference leans toward the latter because it offers greater customization, cost-effectiveness, and stability. If you\u0026rsquo;re curious about selecting the right blogging tool for you, you can also check out this Chinese blog written by Douchi for valuable insights.\nThis article is written for people who are interested in creating a blog on their own but have minimal coding experience. It focuses on using Hugo and GitHub as the main tools for creating a blog. Hugo offers hundreds of themes with diverse styles and functions that you can explore to suit your personal needs. I would recommend the Blowfish theme, which is one of the most advanced and flexible themes in Hugo with attractive layout and detailed documentation. If you prefer to use a different theme, simply refer to the documentation of your chosen theme when it comes to theme-specific steps.\nPrerequisites # No prior background knowledge is needed. I will try to explain everything in the procedures and feel free to leave a comment if you have any questions during the setup.\nHowever, to ensure a smooth follow-along experience, please complete the following steps before getting started:\nSign up for a GitHub Account and generate a personal access token following this tutorial Copy the token and store it somewhere else, because you won\u0026rsquo;t be able to see it again on GitHub. Download a code editor if you don\u0026rsquo;t have one Visual Studio Code, recommended for individuals with long-term coding needs Sublime Text, recommended for beginners Install Git on your system You can check whether Git is already installed by running git --version in the terminal If you\u0026rsquo;re a Mac user, please install homebrew first, which will make your life much easier For coding newbies, the installation steps are essentially copying and pasting commands into the terminal. You can find the macOS Terminal in the Utilities folder within the Applications folder, or simply search for it using Spotlight; Windows user please use PowerShell.\nThat\u0026rsquo;s it! You\u0026rsquo;re ready to start now.\nProcedures # 1. Install Hugo # for MacOS\nRun this command in the terminal. This will install the extended edition of Hugo. brew install hugo Enter this command in the terminal to verify whether Hugo is installed successfully. hugo version for Windows\nRefer to Hugo Installation Instructions or this tutorial on Windows 10 2. Create a Hugo Site # For Windows users, please only use PowerShell for the following commands as required by Hugo. Do not use the Command Prompt or Windows PowerShell. PowerShell and Windows PowerShell are different applications. Run the cd command to navigate to the folder where you\u0026rsquo;d like to store the code for the blog. For example, if you want to place the folder on your Desktop, the command should be: cd ~/Desktop cd means \u0026ldquo;change directory\u0026rdquo;, which will allow the terminal to change its current working directory to another location in the file system. ~ refers to the home directory on your system. It can be omitted if you\u0026rsquo;re already in the home directory.\nIf you want to place your folder in a different location, you will need to modify the code with the actual path. Learn more about the command line here for your reference.\nRun this command with your own site name to create the necessary directory structure for your website. For example, the exact command I used is hugo new site gigigatgat. hugo new site \u0026lt;your-site-name\u0026gt; You should see a folder with the name \u0026lt;your-site-name\u0026gt; on your desktop or your selected location. The folder should include eight subfolders and one configuration file: ├─ archetypes ├─ assets ├─ content ├─ data ├─ hugo.toml ├─ i18n ├─ layouts ├─ static ├─ themes The names and quantities of folders may differ depending on the Hugo version. Don\u0026rsquo;t stress too much about that. ls means \u0026ldquo;list\u0026rdquo;, which will display the contents of a directory.\n3. Download and Configure the Blowfish Theme # If you\u0026rsquo;d like to use another theme, please refer to the specific theme\u0026rsquo;s documentation and then proceed to Step5: Preview and Publish. Download the Blowfish theme # Run the following commands one by one. Make sure you replace \u0026lt;your-site-name\u0026gt; with the actual folder name. cd \u0026lt;your-site-name\u0026gt; git init git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish Check the themes folder in this project. The Blowfish theme should be cloned in this folder. Set up the basic configuration files # In the root folder of your website project, delete the initial hugo.toml file. Copy all the config files from the themes/blowfish/config/_default/ folder to the config/_default/ folder in your root folder. After the previous steps, your folder should look as follows: The official installation, configuration, and updates guide could be found here. Please note that some file names are different because of the version of Hugo. If you\u0026rsquo;re using Hugo Version 0.119.0 or later, my instructions are the most up-to-date.\n4. Dive into the Blowfish Theme # I strongly recommend that you go through the official Blowfish Documentation Series to develop a comprehensive understanding towards the various parameters of the files and functionalities of the theme. This section serves as a quick start for a basic blog and provides some additional explanations based on the documentation.\nIn the theme files, you\u0026rsquo;ll see the # character frequently which is used to denote comments. Removing the # character will activate the line of code.\nModify the configuration files # # config.toml # Set the parameters as below and note that:\nUpdate the baseURL as https://\u0026lt;github_username\u0026gt;.github.io/\u0026lt;repository-name\u0026gt;. You\u0026rsquo;ll set up the repository in GitHub later. My baseURL in this case is https://avocadoTiff.github.io/gigigatgat. You may want to change the defaultContentLanguage to \u0026ldquo;zh-CN\u0026rdquo; for simplified Chinese or \u0026ldquo;zh-tw\u0026rdquo; for traditional Chinese. Other available languages could be found here. # config/_default/config.toml theme = \u0026#34;blowfish\u0026#34; baseURL = \u0026#34;https://\u0026lt;github_username\u0026gt;.github.io/\u0026lt;repository-name\u0026gt;\u0026#34; defaultContentLanguage = \u0026#34;en\u0026#34; # languages.en.toml # If your website language is English, you can just modify the following parts of the file:\n# config/_default/languages.en.toml title = \u0026#34;\u0026lt;your-site-name\u0026gt;\u0026#34; [author] name = \u0026#34;your name\u0026#34; image = \u0026#34;img/blowfish_logo.png\u0026#34; headline = \u0026#34;I\u0026#39;m only human\u0026#34; bio = \u0026#34;A little bit about me\u0026#34; links = [ { email = \u0026#34;mailto:hello@your_domain.com\u0026#34; }, { instagram = \u0026#34;https://instagram.com/username\u0026#34; }, { mastodon = \u0026#34;https://mastodon.instance/@username\u0026#34; } ] If the defaultContentLanguage you set in the config.toml file is \u0026ldquo;zh-CN\u0026rdquo;, you should rename this file as languages.zh-CN.toml and update the code as below:\n# config/_default/languages.zh-CN.toml languageCode = \u0026#34;zh-CN\u0026#34; languageName = \u0026#34;Chinese\u0026#34; weight = 1 title = \u0026#34;\u0026lt;your-site-name\u0026gt;\u0026#34; [params] displayName = \u0026#34;中文\u0026#34; isoCode = \u0026#34;zh-CN\u0026#34; rtl = false dateFormat = \u0026#34;2 January 2006\u0026#34; # logo = \u0026#34;img/logo.png\u0026#34; [author] name = \u0026#34;Your name\u0026#34; image = \u0026#34;img/blowfish_logo.png\u0026#34; headline = \u0026#34;I\u0026#39;m only human\u0026#34; bio = \u0026#34;A little bit about me\u0026#34; links = [ { email = \u0026#34;mailto:hello@your_domain.com\u0026#34; }, { instagram = \u0026#34;https://instagram.com/username\u0026#34; }, { mastodon = \u0026#34;https://mastodon.instance/@username\u0026#34; } ] The images should be placed in the site’s assets/img/ folder. In the [params] section displayName will only be displayed when the language switch function is used logo represents the site\u0026rsquo;s logo In the [author] section image is your profile image headline will be displayed on the homepage bio will be displayed in the articles if you set showAuthor = true in the params.toml links are the social media icons with links that you\u0026rsquo;d like to share For links, the correct syntax is: links = [{item1}, {item2}, {item3}]. Avoid omitting any punctuation or adding an extra comma after the last item. # menus.en.toml # Refer to the code below for basic menu settings:\n# config/_default/menus.en.toml [[main]] name = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Tech\u0026#34; parent = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;categories/tech\u0026#34; weight = 20 [[main]] name = \u0026#34;Kitchen\u0026#34; parent = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;categories/kitchen\u0026#34; weight = 30 [[main]] name = \u0026#34;About\u0026#34; pageRef = \u0026#34;about\u0026#34; weight = 70 [[main]] identifier = \u0026#34;github\u0026#34; pre = \u0026#34;github\u0026#34; url = \u0026#34;your-url-link\u0026#34; weight = 100 [[footer]] name = \u0026#34;Tags\u0026#34; pageRef = \u0026#34;tags\u0026#34; weight = 10 [[footer]] name = \u0026#34;Categories\u0026#34; pageRef = \u0026#34;categories\u0026#34; weight = 20 name specifies the text will be displayed in the menu link. pageRef specifies where the Hugo page would be directed to. You need to have corresponding pages in the content folder to be linked to. parent is used for nested menus. identifier and pre are used to place icons in the menu. url is for linking to external URLs. weight is used to sort the menu links in ascending order. The lowest weight will be displayed as the first item in the menu. Similar with above, rename the file as menus.zh-CN.toml if simplified Chinese is your site\u0026rsquo;s defaultContentLanguage.\n# params.toml # This file specifies a wide range of theme parameters that you can use to customize your site. To ensure a smooth start, I suggest you modify the following lines in the file:\n# config/_default/params.toml mainSections = [\u0026#34;posts\u0026#34;] disableImageOptimization = false defaultBackgroundImage = \u0026#34;/img/ocean.jpg\u0026#34; defaultFeaturedImage = \u0026#34;/img/ocean.jpg\u0026#34; highlightCurrentMenuArea = true smartTOC = true smartTOCHideUnfocusedChildren = false [header] layout = \u0026#34;fixed\u0026#34; # valid options: basic, fixed, fixed-fill, fixed-fill-blur [homepage] layout = \u0026#34;background\u0026#34; # valid options: page, profile, hero, card, background, custom # homepageImage = \u0026#34;/img/ocean.jpg\u0026#34; # used in: hero, and card showRecent = true showRecentItems = 10 showMoreLink = false showMoreLinkDest = \u0026#34;posts\u0026#34; cardView = false cardViewScreenWidth = false layoutBackgroundBlur = true # only used when layout equals background [article] showTableOfContents = true showTaxonomies = true Again, the images should be placed in the site’s assets/img/ folder. For now you can copy all the files from the themes/blowfish/exampleSite/assets/ folder to the assets folder in your root folder for convenience. mainSections is related to the content you\u0026rsquo;d like to display in the Recent articles on the homepage. Refer to the Blowfish Configuration article for more details and experiment with the rest parameters later. Add pages to your site # - Content Organization # All content is placed within the content folder. Below is an example of the content structure based on the above menu:\n. ├── assets │ └── img │ └── ocean.jpg | └── logo.png ├── config │ └── _default ├── content │ ├── _index.md │ ├── about.md │ ├── categories │ │ ├── _index.md │ │ ├── tech │ │ │ └── _index.md │ │ └── kithen │ │ └── _index.md │ ├── tags │ │ └── _index.md │ └── posts │ ├── _index.md │ └── first-post │ ├── featured.jpg │ └── index.md └── themes └── blowfish - Add Content # There are two ways to add content in the site project: you can either use the GUI (Graphical User Interface) or the CLI (Command Line Interface).\nGUI: Simply create new folders, copy and paste files, edit them in your code editor. The example files can be found at themes/blowfish/exampleSite/content/ folder. Don\u0026rsquo;t copy all of the example files. Simplify the main content to plain text immediately, as the old content may be related to other files and could cause errors. CLI: Copy default.md from themes/blowfish/exampleSite/archetypes/ folder to replace the initial one in the archetypesfolder in your root directory. Use the terminal to run this Hugo command to create a new page: hugo new content posts/my-first-post/index.md This command will create an index.md file in the content/posts/my-first-post folder based on the front matter template defined in the archetypes folder. If you open the file in your code editor, it will now look like this:\n--- title: \u0026#34;Index\u0026#34; date: 2023-11-02T16:21:18-04:00 draft: true --- - Branch pages # Branch pages include the homepage, section listings, and taxonomy pages. The filename for this content type is _index.md. As you can see in the above content structure, the content/_index.md file defines the content of the homepage, and the content/posts/_index.md file defines the content of the posts page. In this example, I only specified the title, description, and whether the posts list on this page would be grouped by year:\n--- title: \u0026#34;Posts\u0026#34; description: \u0026#34;All posts\u0026#34; groupByYear: true --- - Leaf pages # Leaf pages are single pages that don\u0026rsquo;t contain a list of sub-pages. It is named as index.md in the corresponding post folder for an individual article page or about.md for an about page. My index.md file in the content/posts/Getting Started with Entity Framework Core in Visual Studio folder looks like this:\n--- title: \u0026#34;Getting Started with Entity Framework Core in Visual Studio\u0026#34; date: 2023-10-24 draft: false description: \u0026#34;How to use Entity Framework Core to connect database in Visual Studio\u0026#34; slug: \u0026#34;how to use Entity Framework Core\u0026#34; tags: [\u0026#34;tutorial\u0026#34;, \u0026#34;code\u0026#34;, \u0026#34;ASP.NET\u0026#34;, \u0026#34;VisualStudio\u0026#34;] categories: [\u0026#34;Tech\u0026#34;] --- Entity Framework Core is a powerful tool for simplifying database integration with web applications... draft determines whether this content is ready to be published or not. If it is set to true, the content will not be visible when you build the site. slug is used in the URL path when the content is published. In my case, the link for this post would be https://tiffahahahu7.github.io/gigigatgat/posts/how-to-use-entity-framework-core/. tags and categories are defined here to be displayed on the Tags and Categories pages. The body of the post is written in markdown, an easy-to-use text formatting language. I strongly recommend familiarizing yourself with it. For more explanations, you can refer to Blowfish\u0026rsquo;s Content Examples and Front Matter.\n5. Preview and Publish # Run this command in the terminal to preview the site in your browser, with the given URL address http://localhost:1313/ or http://localhost:1313/\u0026lt;repository-name\u0026gt; depending on your baseURL. hugo server Make sure that the draft value for the pages you want to display is set to false; otherwise, they won\u0026rsquo;t appear in the browser, unless you run hugo server -D. If you site doesn\u0026rsquo;t render your posts correctly, double-check the rules for content organization.\nModify the content and configuration until you\u0026rsquo;re satisfied with the preview. Tags and Categories may not be updated immediately. In this case, try to exit by pressing Ctrl + C and restart hugo server to see the changes. In the root directory, run the following command to publish the site. It will create a public folder with the entire static files necessary for your website. hugo 6. How to Deploy the Site with GitHub Pages # Go to your GitHub Account and create a new repository. The repository name should be in accordance with your baseURL in the config.toml file. Run the following commands to add the GitHub repository as a remote repository and push all the local files to it. Remember to replace with your own remote URL. git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/avocadoTiff/gigigatgat.git git push -u origin main If you encounter a prompt requiring your GitHub username and password. Enter your personal access token as the password instead of your account password. Change your directory into public. Run the following commands to connect to the remote repository and create a gh-pages branch cd public git init git remote add origin https://github.com/avocadoTiff/gigigatgat.git git checkout --orphan gh-pages Run the following commands to upload the files to gh-pages branch git add . git commit -m \u0026#34;upload site files\u0026#34; git push -u origin gh-pages In the Settings \u0026gt; Pages, ensure that the GitHub Pages site is being built from the gh-pages branch Wait for a few minutes and refresh the page. You\u0026rsquo;ll see a message like this: Your site is live at https://avocadotiff.github.io/gigigatgat/. 🎉 Congrats! Your blog is now live online!\n7. How to Update Your Blog # Once you make any modification or add new posts to your blog, you can update your blog by three steps:\nIn the root directory, review you site preview by executing the command hugo server and then run the command hugo to update the site files in the public folder. Ensure that you\u0026rsquo;re still in the in the root directory and run the following commands: git add . git commit -m \u0026#34;add new posts\u0026#34; git push -u origin main Change your directory into public by the command cd public and run the following commands: git add . git commit -m \u0026#34;add new posts\u0026#34; git push -u origin gh-pages This is the most basic way of updating your blog manually. You can also automate the deployment process with GitHub Actions, which is a more advanced and efficient method. I\u0026rsquo;m still in the process of learning GitHub Actions, and I\u0026rsquo;ll keep you updated if I come across an easier way to comprehend and make use of this tool. Thank you for reading this far! I hope this tutorial can help you in building your personal blog smoothly. If you have any questions during the process, please feel free to reach out. I\u0026rsquo;m more than happy to help create another blog in the universe.\nReference # Hugo Documentation Blowfish Documentation Series Create a static website with Hugo and Host it with Github Pages ","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/posts/how-to-create-a-blog/","section":"博客","summary":"Everyone deserves to own a blog. I\u0026rsquo;m here to help.","title":"A Beginner-Friendly Tutorial for Building a Blog with Hugo, the Blowfish Theme, and GitHub Pages"},{"content":"","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/tags/blog/","section":"標籤","summary":"","title":"blog"},{"content":"","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/tags/code/","section":"標籤","summary":"","title":"code"},{"content":"To demo how to build a blog for beginners, I created a new user on my macOS and reinstalled Hugo in the new environment. However, the latest Hugo version, 0.120.3, unfortunately has some compatibility issues with the installed Blowfish module. For example, certain configuration parameters such as showDate, showView, showLikes cannot be rendered correctly on my site. While this issue may be resolved in future version updates, I would like to revert to my previous Hugo version, 0.119.0, for the time being.\nbrew install hugo@0.119.0 was my initial thought, but it didn\u0026rsquo;t work as expected. After some research, I found that Manuel Martinez\u0026rsquo;s method worked best for me. Below are the exact procedures with a few adjustments.\nProcedures # 1. Download a Specific Hugo Version # Visit Hugo releases on GitHub and search for the version that you want to install Click on the specific version number link and scroll down to the Assets section Choose the package that matches your operating system. The one I downloaded is hugo_extended_0.119.0_darwin-universal.tar.gz Verify the package\u0026rsquo;s contents before extracting it using the command: tar tvf ~/Downloads/hugo_extended_0.119.0_darwin-universal.tar.gz Remember to change the path if your package is downloaded in a different location. You\u0026rsquo;ll see something like below in the terminal:\n-rwxr-xr-x 0 root root 145442184 Sep 24 11:29 hugo -rw-r--r-- 0 root root 12810 Sep 24 11:19 README.md -rw-r--r-- 0 root root 11347 Sep 24 11:19 LICENSE 2. Edit the Shell Profile # Run echo $PATH to see the order of directories in your PATH. By default, you may see the result starts with /opt/homebrew/bin/hugo Run the following command to determine whether your default shell is bash or zsh echo $SHELL Depending on the type of the shell, edit the profile using one of the commands below nano ~/.bash_profile #or nano ~/.zprofile Add export PATH=\u0026quot;$HOME/bin:$PATH\u0026quot; to the beginning of the file Press Ctrl + O to save the changes and exit by pressing Ctrl + X Run one of the following commands to apply the changes to the current session source ~/.bash_profile #or source ~/.zprofile 3. Install Hugo in the Local Bin Directory # Check whether you already have a bin directory in the home directory; if not, create one ls ~/bin #or mkdir ~/bin Move to the bin directory and extract the tarball cd ~/bin tar -xvzf ~/Downloads/hugo_extended_0.119.0_darwin-universal.tar.gz 4. Verify the Installation # Run which hugo to confirm Hugo is in the local bin directory Re-run echo $PATH. It should now begin with the path /Users/\u0026lt;your-user-name\u0026gt;/bin Run hugo version to display the Hugo version your system is using Reference # Install Specific Version Hugo MacOS ","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/posts/install-specific-hugo-version/","section":"博客","summary":"To demo how to build a blog for beginners, I created a new user on my macOS and reinstalled Hugo in the new environment.","title":"How to Install a Specific Version of Hugo on macOS"},{"content":"","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/tags/hugo/","section":"標籤","summary":"","title":"hugo"},{"content":"","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/tags/tutorial/","section":"標籤","summary":"","title":"tutorial"},{"content":" More Than Web Development ","date":"4 November 2023","permalink":"/gigigatgat/zh-tw/categories/tech/","section":"分類","summary":" More Than Web Development ","title":"轉碼心得"},{"content":" Let\u0026rsquo;s make blogging great again! 事情要從2023年8月，我偶然間讀到豆豉老師的 《2023 年了你为什么需要写博客》開始說起。雖然離我讀到這篇文章已經過去快3個月了，但我依然能想起讀完後那種熱血沸騰、想擼起袖子大幹一場的澎湃心情（。她分享的所有理由都說到了我的心坎裡，而且我也已經擁有讀寫代碼的基本能力，我覺得沒有理由不受這個號召行動起來。 建站是幾天時間就可以完成的任務，博客最大的挑戰是如何堅持輸出，保持這個空間的生命力。為此我想從自己的角度出發，重新梳理我寫博客的理由，激勵自己保持這個習慣。\n記錄是記憶的開瓶器 # 「你在2022年做了什麼？」Sean，我的一個Cambly tutor那天這樣問我。我當然說得出個大概：我工作、考雅思、申學校、辭職、申簽證、陪伴家人，這是我的2022年的主線。有行動力的一條主線，但很無聊。我更想記得那些細微的閃光的瞬間，那些來得快去得更快的思緒。這還是2022過去不久的情況，如果再問我「2021年做了什麼呢」，我恐怕只答得出「上班」。我本來就是個記性很差的人，我切實活過的日子、擁有的情感和蹦躂在腦海裡的想法就這樣被一年一年吞噬。時間越久，這些記憶的形狀就越模糊。 所以我決定記錄，記錄就像是把時間裝進瓶子裡的過程，讓有一天打開瓶蓋時它還能還鮮活如昔（點播一首Rebecca的Zeit in einer Flasche）。我不想辜負我認真活過的日子。如果它值得被記得，它就值得被記錄。\n一個閉上眼睛與自己對話的過程 # （真的閉上眼睛就打不了字了喂） 對我來說，寫個人博客和在社交媒體發帖的最大區別是前者更要求我與自己進行對話。在社交媒體發帖隨興隨意，想到什麼說什麼。寫博客卻需要我首先確立一個主題，重新思考我想表達什麼內容，如何組織我的語言。寫博客是一種儀式。 我不想去定義「博客應該是什麼樣的」，不同的人有不同的寫法。有的人靈光乍現就能流暢地寫出一篇博文，有的人整理總結每個月的社媒碎碎念又是一篇博文。博客未必需要太縝密的結構，但它一定涉及自我的整理和輸出，所以它至少是一個重新認識並塑造自己的過程。 過去這幾年我很懶，不僅在社交媒體的表達欲很低，私下的回顧與反思也很少，導致我的表達能力和生產效率明顯下降——光是寫這篇文就用了我將近一整天的時間！救命！我也不想失去我曾經引以為傲的對文字的感知力，所以寫博客也算是我的復健療法吧！\n我的地盤我做主 # 這大概是我選擇博客媒介最重要的理由了。在微博炸了四個號之後，我遷徙到了長毛象作為日常使用的社交媒體平台。長毛象很好，但它也有需要遵守的社區規則和自身的功能限制。我本身相熟的一些好友也因爲不了解或者不習慣長毛象的使用方式，無法與我保持日常的connection。 博客是更自由的。尤其是自建博客，它完完全全是我的空間，我可以決定它長什麼樣，有哪些功能；我可以無所顧忌地寫字，最小化自我審查的影響。同時它也是開放的。我要鏗鏘有力地在此申明：「在嘰嘰乞乞，你來去自由！」想起這兒了就順道做個客，沒想起來也完全不打緊。我的地盤我做主，什麼時候看你做主。\n共建博客宇宙 # 如果你只有我一個人的博客看，那可能怪無聊的。看的人很難養成看的習慣，寫的人也很難堅持寫下去。我喜歡上博客的其中一個原因是，博客自帶互聯網無邊界的特點，加上每個博客本身獨一無二的個性特質，探索或回訪一個博客的經歷都是珍貴而奇妙的，像在宇宙中發現一顆又一顆的星球。博客所反映出來的個人的創造力和生命力又是那樣強烈，我可以輕易從中獲得與人連結所產生的幸福感。而博客的內容又是不可預測的，它給閱讀者一個窺探寫作者生命體驗的機會，從而豐富、延展自身的生命體驗。 這一段怎麼那麼正經啊有點受不了了，總而言之，看大家的博客我很幸福！感謝堅持寫博客的每一位，我也想加入你們，成爲博客宇宙裡的一顆小小星球（並且當地主）。\n","date":"30 October 2023","permalink":"/gigigatgat/zh-tw/posts/why-blogging/","section":"博客","summary":"Let\u0026rsquo;s make blogging great again! 事情要從2023年8月，我偶然間讀到豆豉老師的 《2023 年了你为什么需要写博客》開始說起。雖然離我讀到這篇文章已經過去快3個月了，但我依然能想起讀完後那種熱血沸騰、想擼起袖子大幹一場的澎湃心情（。她分享的所有理由都說到了我的心坎裡，而且我也已經擁有讀寫代碼的基本能力，我覺得沒有理由不受這個號召行動起來。 建站是幾天時間就可以完成的任務，博客最大的挑戰是如何堅持輸出，保持這個空間的生命力。為此我想從自己的角度出發，重新梳理我寫博客的理由，激勵自己保持這個習慣。","title":"我為什麼開始寫博客"},{"content":" 譚仔——My comfort food all the time 在香港生活的時候想不到要吃什麼就會去譚仔（此處“譚仔”為“譚仔三哥”的簡稱，請勿與“譚仔雲南米線”混淆，三哥 is the best）吃米線，離開了之後掛念得最多的也是這一口。有一天無意間在YouTube上撞到一個 譚仔麻辣湯底食譜，試了之後也確實覺得有八分那個味兒，所以作為本站第一個菜譜隆重推薦給大家！\n寫在前面 # 米線的各種配菜你想吃什麼加什麼，不想吃什麼就從食譜裡減走什麼，沒那麼多所謂er。在此附上 譚仔官網餐牌供選擇困難症參考。\n製作湯底的材料中花椒油和淡奶是成就“譚仔味道”的點睛之筆，必不可少；辣椒粉的用量可以根據不同品牌不同產品的辛辣程度和你的吃辣水平酌情修改，請不要放成辣椒麵；豬肉精約等於豬骨濃湯寶，推薦家樂牌。\n食材準備 # 江西米粉 （推薦加拿大華超2.99$一包的江西米粉） 豬肉精 雞粉 辣椒粉 花椒油 淡奶（三花/黑白/雀巢都行） 糖/鹽 葷的配菜（雞肉/豬肉/牛肉/各種丸子/\u0026hellip;） 素的配菜（竹笙/腐皮/青菜/金針菇\u0026hellip;） 製作步驟 # 處理配菜 # 預先處理一些需要準備工序的配菜，如竹笙和腐皮需要提前泡發，加雞腿肉可能需要提前醃製炒熟，肥牛片可以單獨焯水撇除浮沫備用等等。 我個人很喜歡在米線裡加竹笙，但竹笙如果不好好處理就會有異味，可以參考我最經常使用的這個 泡發竹笙的方法。簡而言之就是去頭去尾去傘狀物，剪成段後加清水白醋鹽反覆浸泡三次左右。不加白醋只加鹽也可以，適當增加浸泡的時間，最後一次浸泡用清水再清洗一次。 煮米線 # 煮一鍋開水，水開之後下一把米線（食指抵拇指握起來虎口剛剛好一圈是我家兩個人吃的量）煮五分鐘，不時攪拌防止粘鍋。煮差不多後撈出來過一遍涼水備用。\n煮湯底 # 用一個乾淨的鍋重新煮一鍋水，水滾後轉中火下一顆豬肉精化開，一湯匙雞粉，半湯匙鹽和糖，再憑個人喜好下一至兩湯匙辣椒粉、花椒油、淡奶。攪拌均勻後可以嚐下味道再調整鹹淡。 以上是兩人份的水量和調料量。 下配菜及米線 # 先下需要久煮或者耐煮的配菜，如竹笙/牛丸/豆泡等，煮夠時間後再放易熟的其它配菜，如青菜/腐皮等。米線什麼時候放取決於你希望它軟爛或者勁道的程度，通常我會和易熟的配菜一起放。\n寫在後面 # 這款米線做熟練了之後是名副其實的快手菜：配菜這一步驟完全可以提前預備，用密封袋分裝放在冰箱冷凍層隨取隨用；煮米線和煮湯底可以同時進行，反正米線最後才放。這樣下來預計15-30分鐘就可以享用家庭版譚仔米線啦！Enjoy！ （譚仔我最喜歡的湯底是煳辣口味，但至今未能一解煳辣湯底配方之謎。在此鄭重懸賞煳辣配方線索，歡迎有志之士嘗試探索！）\n","date":"27 October 2023","permalink":"/gigigatgat/zh-tw/posts/tamjai-samgor-rice-noodle/","section":"博客","summary":"譚仔——My comfort food all the time 在香港生活的時候想不到要吃什麼就會去譚仔（此處“譚仔”為“譚仔三哥”的簡稱，請勿與“譚仔雲南米線”混淆，三哥 is the best）吃米線，離開了之後掛念得最多的也是這一口。有一天無意間在YouTube上撞到一個 譚仔麻辣湯底食譜，試了之後也確實覺得有八分那個味兒，所以作為本站第一個菜譜隆重推薦給大家！","title":"在加國，復刻一碗香港經典譚仔三哥米線"},{"content":"","date":"27 October 2023","permalink":"/gigigatgat/zh-tw/tags/%E7%B1%B3%E7%B7%9A/","section":"標籤","summary":"","title":"米線"},{"content":" Food Made in Our Home ","date":"27 October 2023","permalink":"/gigigatgat/zh-tw/categories/kitchen/","section":"分類","summary":" Food Made in Our Home ","title":"廚房故事"},{"content":"其實我也沒那麼懶。\n","date":"26 October 2023","permalink":"/gigigatgat/zh-tw/authors/sloth/","section":"作者","summary":"其實我也沒那麼懶。","title":"Sloth (Raymond)"},{"content":"嗨！我們是 Avocado 和 Sloth，生活搭子，現居加拿大渥太華，都是半路出家轉碼大軍中的一員，學的是 Web Development。\nAvocado\n女的，INFJ 從哪裡來不重要，地球就是我的根和天地 關心女性/人權/政治/兩岸三地，也關心自己的生活 修煉中的大廚；寶可夢訓練家；不定期出沒劇院；還沒開始研究植物的植物愛好者 學過英語廣東話德語，正在學法語和日語，但是連家鄉方言在內沒一個真的講得流暢無阻的；心酸又努力的典型代表（已經很棒了！） 目前最想做的事：考出駕照；在家種菜；練大肌肉 Sloth 男的，INFP 來自香港 熱衷歷史/政治/社會學，極端福利資本主義者 失憶症患者；偶發性超強矛盾複合體 受訓中的大廚助理，但自問天分較現任大廚高（我呸） 一台能上網且配置足夠應付WOW的電腦，就可以讓我足不出戶 人生目標：盡早退休 ","date":"26 October 2023","permalink":"/gigigatgat/zh-tw/about/","section":"歡迎光臨嘰嘰乞乞/GiGiGatGat! 💬","summary":"嗨！我們是 Avocado 和 Sloth，生活搭子，現居加拿大渥太華，都是半路出家轉碼大軍中的一員，學的是 Web Development。\nAvocado\n女的，INFJ 從哪裡來不重要，地球就是我的根和天地 關心女性/人權/政治/兩岸三地，也關心自己的生活 修煉中的大廚；寶可夢訓練家；不定期出沒劇院；還沒開始研究植物的植物愛好者 學過英語廣東話德語，正在學法語和日語，但是連家鄉方言在內沒一個真的講得流暢無阻的；心酸又努力的典型代表（已經很棒了！） 目前最想做的事：考出駕照；在家種菜；練大肌肉 Sloth 男的，INFP 來自香港 熱衷歷史/政治/社會學，極端福利資本主義者 失憶症患者；偶發性超強矛盾複合體 受訓中的大廚助理，但自問天分較現任大廚高（我呸） 一台能上網且配置足夠應付WOW的電腦，就可以讓我足不出戶 人生目標：盡早退休 ","title":"關於我們"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/zh-tw/tags/asp.net/","section":"標籤","summary":"","title":"ASP.NET"},{"content":" Entity Framework Core is a powerful tool for simplifying database integration with web applications. In this article, we\u0026rsquo;ll gain a basic understanding of Entity Framework Core and demonstrate how it streamlines the process of connecting databases to your web pages. You\u0026rsquo;ll also find step-by-step instructions to help you get started, regardless of whether you\u0026rsquo;re a Windows or Mac user. Since I\u0026rsquo;m a Mac user, most of the screenshots in this tutorial will be from a Mac system.\nWhat is Entity Framework Core? # Entity Framework Core (EF Core) is an open-source and lightweight framework developed by Microsoft. It is widely used in .NET applications to help developers interact with relational databases and convert data into entity classes in a more object-oriented manner. This tool also enables automatic generation of Razor pages with accessible data and default layout settings. You can install EF Core on NuGet public domain to your web application projects in Visual Studio.\nPrerequisites # Installed Visual Studio and MySql Workbench Connect to local instance in MySql and ensure the server status is Running A populated database to be converted to classes and displayed on web pages In my case, I created a new scheme named StudentRecord and ran the sql file StudentRecordDBBuilder.MySQL.sql to populate it Basic knowledge about ASP.NET and Razor Page Procedures # 1. Create a new ASP.NET Razor Page web application project in Visual Studio # Choose the Web Application template for creating an ASP.NET Core application with example ASP.NET Razor Page content Select .NET 7.0 as the targeted frame Uncheck Configure for HTTPS Name the project and solution as you prefer, and place the folder in a location that best suits you 2. Install Microsoft Entity Framework Core # Right click on the project folder and select Manage NuGet Packages Select Browse tab, and select nuget.org as the package source. Search and install the following three packages to the project. You may need to click Accept if a License Acceptance window pops up. MySql.EntityFrameworkCore Microsoft.EntityFrameworkCore.Tools Microsoft.VisualStudio.Web.CodeGeneration.Design Double check whether these three packages are installed successfully by expanding the project’s Dependencies and Packages or browsing the Installed tab in the NuGet Packages Manager\u0026rsquo;s window 3. Generate the entity classes from the database # Create a folder DataAccess in the project to contain the generated classes for MacOS # Select Show Terminal Window from Tools in the menu if the terminal window is hiding Run the following commands in the VS terminal window: to create a new Tool Manifest: dotnet new tool-manifest to install dotnet-ef: dotnet tool install dotnet-ef to make the dotnet-ef command available: dotnet tool restore to generate classes for each tables in the database and the DataContext class: dotnet dotnet-ef dbcontext Scaffold \u0026quot;Server=localhost; User ID=root; Password=yourPassword; Database=yourDatabaseName\u0026quot; MySql.EntityFrameworkCore -o DataAccess for Windows # Select NuGet Package Manager from Tools in the menu and start NuGet Package Manager Console Run the following command with your own credentials: Scaffold-DbContext “Server=localhost; User ID=root; Password=yourPassword; Database=yourDatabaseName” MySql.EntityFrameworkCore -o DataAccess Remember to use your own credentials in the Scaffold command instead of copying and pasting! By finishing the above steps, the Entity Framework scaffold tool will generate a set of class files in the DataAccess folder 4. Modify the DB connection string for security concerns # Add a ConnectionStrings section with one connection string using the same name of your database in the application’s configuration file appsetting.json Remove the hardcoded connection string in the DB Context Class file, e.g. StudentRecordContext.cs 5. Register the DB Access Service with the Application # In the Program.cs file, add the following statements to the beginning: using Microsoft.EntityFrameworkCore; using \u0026lt;ProjectName\u0026gt;.DataAccess; In the same file, add the following codes after builder.Services.AddRazorPages( ): string dbConnStr = builder.Configuration.GetConnectionString(\u0026#34;StudentRecord\u0026#34;); if (dbConnStr != null) { builder.Services.AddDbContext\u0026lt;StudentRecordContext\u0026gt;( options =\u0026gt; options.UseMySQL(dbConnStr)); } Select Rebuild Solution from Build in the menu and ensure that the solution build successfully 6. Generate Razor pages using Entity Framework (CRUD) # Add a new folder inside the Pages folder, right click on the folder and select Add \u0026gt; New Scaffolding Select Razor Pages using Entity Framework (CRUD) and choose the corresponding model class and data context class you\u0026rsquo;d like to apply By finishing the above steps, the CRUD Razor pages are already generated inside the folder 7. Review and modify the pages according to your needs # In the _Layout.cshtml page, add menu items in the navbar to access the newly generated pages from the index page Run the application and view the pages in browser Common Errors # Debugging is a common practice in application development. One of my biggest challenges in this project is running the Scaffold command. I\u0026rsquo;ve listed a few errors that I encountered and their respective solutions below.\n1. Unable to find provider assembly \u0026lsquo;MySql.EntityFrameworkCore\u0026rsquo; # I re-installed \u0026lsquo;MySql.EntityFrameworkCore\u0026rsquo; with a different version(7.0.5) and forgot to update it. Rebuild the solution will solve this issue.\n2. Missing required argument \u0026lsquo;\u0026lt;Provider\u0026gt;\u0026rsquo; # Double-check the quotation marks in the command. In my case, I mistakenly used Chinese quotation marks.\n3. Authentication to host \u0026rsquo;localhost\u0026rsquo; for user \u0026lsquo;root\u0026rsquo; using method \u0026lsquo;caching_sha2_password\u0026rsquo; failed with message: access denied for user \u0026lsquo;root\u0026rsquo;@\u0026rsquo;localhost\u0026rsquo; (using password: yes) # If you are absolutely certain that you are using the correct password, it\u0026rsquo;s likely that a special character in the password is causing confusion in the terminal/console. You can change the password to a simpler one or create a new temporary user with all privileges and try again.\nCredit # This blog is inspired from a lab assignment of the course CST8256 Web Programming Language I, with an original instruction written by Wei Gong.\n","date":"24 October 2023","permalink":"/gigigatgat/zh-tw/posts/how-to-use-entity-framework-core/","section":"博客","summary":"Entity Framework Core is a powerful tool for simplifying database integration with web applications.","title":"Getting Started with Entity Framework Core in Visual Studio"},{"content":"","date":"24 October 2023","permalink":"/gigigatgat/zh-tw/tags/visualstudio/","section":"標籤","summary":"","title":"VisualStudio"},{"content":"","date":"1 January 0001","permalink":"/gigigatgat/zh-tw/series/","section":"Series","summary":"","title":"Series"},{"content":"每次造訪友鄰的博客我都感到幸福，請大家也幸福一下。如果你碰巧有自己的博客，歡迎和我交換鏈接；如果你有想產出的內容而沒有平台，也歡迎向嘰嘰乞乞投稿喔！\n椒鹽豆豉：日常產出驚人的互聯網友人，復興部落格的先行者兼推動者 第三夏爾：第三宇宙中的具象生活，擁有全宇宙最好看的每月小結 豚骨拉麵館：拉麵館老闆娘，非常喜歡她的菜譜系列 D同學：人類社會的忠實觀察員與執筆者 Meiyue：東京風物記事 呼貓護衛：有一片廣袤的精神世界 ","date":"1 January 0001","permalink":"/gigigatgat/zh-tw/friends/","section":"歡迎光臨嘰嘰乞乞/GiGiGatGat! 💬","summary":"每次造訪友鄰的博客我都感到幸福，請大家也幸福一下。如果你碰巧有自己的博客，歡迎和我交換鏈接；如果你有想產出的內容而沒有平台，也歡迎向嘰嘰乞乞投稿喔！\n椒鹽豆豉：日常產出驚人的互聯網友人，復興部落格的先行者兼推動者 第三夏爾：第三宇宙中的具象生活，擁有全宇宙最好看的每月小結 豚骨拉麵館：拉麵館老闆娘，非常喜歡她的菜譜系列 D同學：人類社會的忠實觀察員與執筆者 Meiyue：東京風物記事 呼貓護衛：有一片廣袤的精神世界 ","title":"友情鏈接"},{"content":" Books, Games, Music, Movies, Dramas, and Things ","date":"1 January 0001","permalink":"/gigigatgat/zh-tw/categories/review/","section":"分類","summary":" Books, Games, Music, Movies, Dramas, and Things ","title":"萬物測評"}]